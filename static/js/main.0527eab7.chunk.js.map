{"version":3,"sources":["utils/ExcelHelper.ts","utils/Diff.ts","components/Import.tsx","components/Left.tsx","components/Right.tsx","components/Center.tsx","components/Cell.ts","utils/RenderDiffTable.tsx","utils/helper.ts","components/DiffResult.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["ExcelHelper","getSheet","wb","sheetname","callback","Promise","resolve","reject","wsItem","Sheets","data","items","XLSX","utils","sheet_to_json","header","convertFileToExcel","file","reader","FileReader","rABS","readAsBinaryString","onload","e","bstr","target","result","read","type","wsnameItems","SheetNames","sheets","workbook","readAsArrayBuffer","SheetJSFT","map","x","join","BlankData","row","col","Array","fill","SampleDataLeft","SampleDataRight","daff","require","ImportHooks","props","Group","compact","style","marginRight","marginTop","marginBottom","name","width","accept","aria-label","onChange","onFileSelectChange","ref","fileRef","value","onSheetSelectChange","sheetlist","defaultProps","LeftHooks","className","padding","marginLeft","Import","hotTableComponentLeft","sheetdata","settings","colHeaders","rowHeaders","height","minRows","minCols","licenseKey","id","stretchH","RightHooks","hotTableComponentRight","CenterHooks","textAlign","size","onClick","onSampleBtnClick","React","createRef","onDiffBtnClick","btntext","onResetBtnClick","Cell","instance","this","y","v","getDataAtCell","undefined","renderDiff","td","prop","cellProperties","tt","view","coopy","SimpleView","cell","DiffRender","renderCell","category","value2","pretty_value","innerHTML","stripHtml","html","String","replace","DiffResultHooks","fontSize","hotTableComponentDiffResult","current","hotInstance","getData","csvContent","forEach","rowArray","scell","toString","includes","processRow","encodedUri","encodeURI","link","document","createElement","setAttribute","body","appendChild","click","removeChild","minSpareCols","minSpareRows","contextMenu","readOnly","renderAllRows","renderer","App","excelHelper","useState","leftsheetname","setLeftSheetname","leftsheetlist","setLeftSheetlist","JSON","parse","stringify","leftsheetdata","setLeftSheetData","leftWorkbook","setLeftWorkbook","rightsheetname","setRightSheetname","rightsheetlist","setRightSheetlist","rightsheetdata","setRightSheetData","rightWorkbook","setRightWorkbook","diffBtnText","leftFileSelectRef","useRef","rightFileSelectRef","fileHandler","event","field","persist","files","fileObj","err","resp","console","log","sheetnames","i","length","push","Option","key","onSheetFieldChange","selectedSheetName","span","Left","Center","left","right","tableLeft","TableView","tableRight","trim","align","compareTables","output","flags","CompareFlags","show_unchanged","always_show_header","always_show_order","never_show_order","unchanged_context","TableDiff","hilite","loadData","diff","Right","DiffResult","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.0527eab7.chunk.js","sourcesContent":["import XLSX, { WorkBook } from \"xlsx\";\n\nexport interface ExcelDomain {\n  items: [] | undefined;\n  sheets: string[];\n  workbook: XLSX.WorkBook;\n}\n\nexport interface SheetDomain {\n  items: [] | undefined;\n}\n\nexport class ExcelHelper {\n  public static SheetJSFT = () => {\n    var jsft = [\"xlsx\"];\n    return jsft\n      .map(function (x) {\n        return \".\" + x;\n      })\n      .join(\",\");\n  };\n\n  public static BlankData = (row: number, col: number) => {\n    var data: string[][] = new Array(row)\n      .fill(\"\")\n      .map(() => new Array(col).fill(\"\"));\n\n    return data;\n  };\n\n  public getSheet = (wb: WorkBook, sheetname: string, callback: any) => {\n    return new Promise(function (resolve, reject) {\n      var wsItem = wb.Sheets[sheetname];\n\n      /* Convert array of arrays */\n      var items = XLSX.utils.sheet_to_json(wsItem, { header: 1 });\n\n      var data = {\n        items: items as [] | undefined,\n      } as SheetDomain;\n\n      resolve(data);\n      return callback(null, data);\n    });\n  };\n\n  public convertFileToExcel = (file: Blob, callback: any) => {\n    return new Promise((resolve, reject) => {\n      var reader = new FileReader();\n      var rABS = !!reader.readAsBinaryString;\n      reader.onload = function (e) {\n        /* Parse data */\n        var bstr = e?.target?.result;\n        var wb = XLSX.read(bstr, { type: rABS ? \"binary\" : \"array\" });\n\n        /* Get first worksheet */\n        var wsnameItems = wb.SheetNames[0];\n        var wsItem = wb.Sheets[wsnameItems];\n\n        /* Convert array of arrays */\n        var items = XLSX.utils.sheet_to_json(wsItem, { header: 1 });\n\n        var data = {\n          items: items,\n          // locations: locations,\n          sheets: wb.SheetNames,\n          workbook: wb,\n        } as ExcelDomain;\n\n        resolve(data);\n        return callback(null, data);\n      };\n      if (file && rABS) reader.readAsBinaryString(file);\n      else reader.readAsArrayBuffer(file);\n    });\n  };\n\n  public static SampleDataLeft = () => {\n    var TestData = [\n      [\"Date\", \"High\", \"Low\", \"Close\", \"Volume\", \"ask\", \"cash\"],\n      [\n        \"2019-07-08 00:00:00\",\n        \"11540.33\",\n        \"11469.53\",\n        \"11506.43\",\n        \"10.77073088\",\n        \"0\",\n        \"100000000\",\n      ],\n      [\n        \"2019-07-07 19:00:00\",\n        \"11610.0\",\n        \"11432.32\",\n        \"11547.98\",\n        \"67.915214697\",\n        \"0\",\n        \"100000000\",\n      ],\n      [\n        \"2019-07-07 18:00:00\",\n        \"11525.0\",\n        \"11426.74\",\n        \"11470.47\",\n        \"31.1094771869\",\n        \"0\",\n        \"100000000\",\n      ],\n      [\n        \"2019-07-07 16:00:00\",\n        \"11254.97\",\n        \"11135.01\",\n        \"11201.6\",\n        \"23.5194946648\",\n        \"0\",\n        \"100000000\",\n      ],\n      [\n        \"2019-07-07 15:00:00\",\n        \"11408.02\",\n        \"11189.0\",\n        \"11254.97\",\n        \"64.0821938629\",\n        \"0\",\n        \"100000000\",\n      ],\n    ];\n\n    return TestData;\n  };\n\n  public static SampleDataRight = () => {\n    var TestData = [\n      [\"Date\", \"High\", \"Low\", \"Close\", \"Volume\", \"bid\", \"ask\", \"Buy\"],\n      [\n        \"2019-07-07 23:00:00\",\n        \"11482.72\",\n        \"11423.0\",\n        \"11475.07\",\n        \"32.99655899\",\n        \"6\",\n        \"0\",\n        \"3\",\n      ],\n      [\n        \"2019-07-07 19:00:00\",\n        \"11610.0\",\n        \"11432.32\",\n        \"11547.98\",\n        \"67.915214697\",\n        \"6\",\n        \"0\",\n        \"9\",\n      ],\n      [\n        \"2019-07-07 18:10:00\",\n        \"11525.0\",\n        \"11426.74\",\n        \"11470.47\",\n        \"31.1094771869\",\n        \"6\",\n        \"0\",\n        \"9\",\n      ],\n      [\n        \"2019-07-07 17:20:00\",\n        \"11566.23\",\n        \"11211.56\",\n        \"11503.4\",\n        \"121.5246740453\",\n\n        \"0\",\n        \"9\",\n      ],\n      [\n        \"2019-07-07 16:00:00\",\n        \"11254.97\",\n        \"11135.01\",\n        \"11200.6\",\n        \"23.5194946648\",\n        \"6\",\n        \"0\",\n        \"9\",\n      ],\n      [\n        \"2019-07-07 15:00:00\",\n        \"11408.02\",\n        \"11189.0\",\n        \"11254.97\",\n        \"64.0821938629\",\n        \"6\",\n        \"1\",\n        \"9\",\n      ],\n    ];\n\n    return TestData;\n  };\n}\n","const daff = require(\"daff\");\n\nexport const diff = (left: [][], right: [][], ref: React.RefObject<any>) => {\n  var instance = ref.current.hotInstance;\n  var result = [];\n  let tableLeft = new daff.TableView(left);\n  let tableRight = new daff.TableView(right);\n\n  tableLeft.trim();\n  tableRight.trim();\n\n  var ct = daff.compareTables(tableLeft, tableRight);\n\n  let align = ct.align();\n  let output = new daff.TableView([]);\n  let flags = new daff.CompareFlags();\n  flags.show_unchanged = false;\n  flags.always_show_header = true;\n  flags.always_show_order = true;\n  flags.never_show_order = false;\n  flags.unchanged_context = true;\n\n  var td = new daff.TableDiff(align, flags);\n  td.hilite(output);\n\n  if (output.height !== 0) {\n    result = output.data;\n    instance.loadData(result);\n  }\n};\n","import React from \"react\";\nimport { ExcelHelper } from \"../utils/ExcelHelper\";\nimport { Input, Select } from \"antd\";\nimport \"antd/dist/antd.css\";\n\ninterface Import {\n  sheetname: string;\n  sheetlist: any;\n  fileRef: React.RefObject<any>;\n  onFileSelectChange(e: React.ChangeEvent<HTMLInputElement>): any;\n  onSheetSelectChange(e: string): any;\n}\n\nconst ImportHooks = (props: Import) => {\n  return (\n    <Input.Group\n      compact\n      style={{ marginRight: 10, marginTop: -25, marginBottom: 3 }}\n    >\n      <input\n        name={\"file-upload\"}\n        style={{ width: \"50%\", marginTop: 10 }}\n        type=\"file\"\n        accept={ExcelHelper.SheetJSFT()}\n        aria-label=\"Select original file\"\n        onChange={(e) => props.onFileSelectChange(e)}\n        ref={props.fileRef}\n      ></input>\n      <Select\n        style={{ width: \"40%\" }}\n        value={props.sheetname}\n        onChange={(e) => props.onSheetSelectChange(e)}\n      >\n        {props.sheetlist}\n      </Select>\n    </Input.Group>\n  );\n};\n\nImportHooks.defaultProps = {\n  sheetname: \"Sheet1\",\n  sheetlist: null,\n};\n\nexport default ImportHooks;\n","import React from \"react\";\nimport Handsontable from \"handsontable\";\nimport { HotTable } from \"@handsontable/react\";\nimport ImportHooks from \"../components/Import\";\n\ninterface Left {\n  sheetname: string;\n  sheetlist: any;\n  fileRef: React.RefObject<any>;\n\n  sheetdata: any[][] | Handsontable.RowObject[];\n  hotTableComponentLeft: React.RefObject<any>;\n\n  onFileSelectChange(e: React.ChangeEvent<HTMLInputElement>): any;\n  onSheetSelectChange(e: string): any;\n}\n\nconst LeftHooks = (props: Left) => {\n  const hotLeftSettings = {\n    colHeaders: true,\n    rowHeaders: true,\n    height: 305,\n    minRows: 12,\n    minCols: 8,\n    // colWidth: 100,\n    licenseKey: \"non-commercial-and-evaluation\",\n    id: \"table-left\",\n  };\n  return (\n    <>\n      <div className=\"left\" style={{ padding: 10, marginTop: -25 }}>\n        <h1 style={{ marginLeft: 3 }}>{\"<元・original>\"}</h1>\n        <ImportHooks\n          sheetname={props.sheetname}\n          sheetlist={props.sheetlist}\n          onFileSelectChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            props.onFileSelectChange(e)\n          }\n          onSheetSelectChange={(e: string) => props.onSheetSelectChange(e)}\n          fileRef={props.fileRef}\n        />\n        <HotTable\n          ref={props.hotTableComponentLeft}\n          data={props.sheetdata}\n          style={{ width: \"98%\" }}\n          settings={hotLeftSettings}\n          stretchH={\"all\"}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default LeftHooks;\n","import React from \"react\";\nimport Handsontable from \"handsontable\";\nimport { HotTable } from \"@handsontable/react\";\nimport ImportHooks from \"../components/Import\";\n\ninterface Right {\n  sheetname: string;\n  sheetlist: any;\n  fileRef: React.RefObject<any>;\n\n  sheetdata: any[][] | Handsontable.RowObject[];\n  hotTableComponentRight: React.RefObject<any>;\n\n  onFileSelectChange(e: React.ChangeEvent<HTMLInputElement>): any;\n  onSheetSelectChange(e: string): any;\n}\n\nconst RightHooks = (props: Right) => {\n  const hotRightSettings = {\n    colHeaders: true,\n    rowHeaders: true,\n    height: 305,\n    minRows: 12,\n    minCols: 8,\n    // colWidth: 100,\n    licenseKey: \"non-commercial-and-evaluation\",\n    id: \"table-right\",\n  };\n  return (\n    <>\n      <div className=\"right\" style={{ padding: 10, marginTop: -25 }}>\n        <h1 style={{ marginLeft: 3 }}>{\"<先・modified>\"}</h1>\n        <ImportHooks\n          sheetname={props.sheetname}\n          sheetlist={props.sheetlist}\n          onFileSelectChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n            props.onFileSelectChange(e)\n          }\n          onSheetSelectChange={(e: string) => props.onSheetSelectChange(e)}\n          fileRef={props.fileRef}\n        />\n        <HotTable\n          ref={props.hotTableComponentRight}\n          data={props.sheetdata}\n          style={{ width: \"98%\" }}\n          settings={hotRightSettings}\n          stretchH={\"all\"}\n        />\n      </div>\n    </>\n  );\n};\n\nexport default RightHooks;\n","import React from \"react\";\nimport \"antd/dist/antd.css\";\nimport { Button } from \"antd\";\n\ninterface DiffBtn {\n  btntext: string;\n  onDiffBtnClick(e: React.MouseEvent<HTMLElement, MouseEvent>): any;\n  onSampleBtnClick(e: React.MouseEvent<HTMLElement, MouseEvent>): any;\n  onResetBtnClick(e: React.MouseEvent<HTMLElement, MouseEvent>): any;\n}\n\nconst CenterHooks = (props: DiffBtn) => {\n  return (\n    <div style={{ textAlign: \"center\" }}>\n      <Button\n        type=\"dashed\"\n        size=\"small\"\n        style={{ marginTop: 150 }}\n        onClick={(e) => props.onSampleBtnClick(e)}\n      >\n        {\"< Sample >\"}\n      </Button>\n      <Button\n        ref={React.createRef()}\n        id=\"btn-diff\"\n        type=\"primary\"\n        style={{ marginTop: 10 }}\n        size=\"large\"\n        onClick={(e) => props.onDiffBtnClick(e)}\n      >\n        {props.btntext}\n      </Button>\n      <Button\n        ref={React.createRef()}\n        id=\"btn-clean\"\n        type=\"default\"\n        style={{ marginTop: 10 }}\n        onClick={(e) => props.onResetBtnClick(e)}\n      >\n        {\" << reset >> \"}\n      </Button>\n    </div>\n  );\n};\n\nexport default CenterHooks;\n","class Cell {\n  value: string;\n  instance: any;\n\n  constructor(value: string, instance: any) {\n    this.value = value;\n    this.instance = instance;\n  }\n\n  getCell(x: number, y: number) {\n    let v = this.instance.getDataAtCell(y, x);\n    if (v === null) return v;\n    else if (v === undefined) return \"\";\n    return \"\" + v;\n  }\n\n  getValue() {\n    return this.value;\n  }\n}\n\nexport default Cell;\n","import Handsontable from \"handsontable\";\nimport Cell from \"../components/Cell\";\nconst daff = require(\"daff\");\n\nexport function renderDiff(\n  instance: any,\n  td: HTMLTableCellElement,\n  row: number,\n  col: number,\n  prop: string | number,\n  value: Handsontable.CellValue,\n  cellProperties: Handsontable.CellProperties\n) {\n  var tt = new Cell(value, instance);\n  var view = new daff.coopy.SimpleView();\n  var cell = daff.coopy.DiffRender.renderCell(tt, view, col, row);\n  var className = cell.category;\n  var value2 = cell.pretty_value;\n  if (className !== \"\") {\n    td.className = className;\n  }\n\n  td.innerHTML = value2;\n  return value2;\n}\n","const isString = (value: any) => {\n  return typeof value === \"string\" || value instanceof String;\n};\n\nconst stripHtml = (html: string) => {\n  if (isString(html)) return html.replace(/(<([^>]+)>)/gi, \"\");\n  return html;\n};\n\nexport { isString, stripHtml };\n","import React from \"react\";\nimport { HotTable } from \"@handsontable/react\";\nimport { renderDiff } from \"../utils/RenderDiffTable\";\nimport { stripHtml } from \"../utils/helper\";\n\ninterface DiffResult {\n  hotTableComponentDiffResult: React.RefObject<any>;\n}\n\nconst DiffResultHooks = (props: DiffResult) => {\n  const hotDiffResultSettings = {\n    minRows: 10,\n    minCols: 10,\n    minSpareCols: 0,\n    minSpareRows: 0,\n    colHeaders: false,\n    contextMenu: false,\n    rowHeaders: false,\n    readOnly: true,\n    renderAllRows: true,\n    licenseKey: \"non-commercial-and-evaluation\",\n  };\n\n  const exportToCsv = () => {\n    const hotInstance = props.hotTableComponentDiffResult.current.hotInstance;\n    const data = hotInstance.getData();\n\n    const processRow = (rowArray: any[]) => {\n      let row = rowArray.map(cell => {\n        let scell = cell === null ? \"\" : cell.toString();\n        scell = stripHtml(scell);\n        if (scell.includes(',') || scell.includes('\"')) {\n          scell = '\"' + scell.replace(/\"/g, '\"\"') + '\"';\n        }\n        return scell;\n      }).join(\",\");\n      return row;\n    }\n\n    let csvContent = \"\\uFEFF\"; // Add BOM for Excel\n    data.forEach((rowArray: any[]) => {\n      csvContent += processRow(rowArray) + \"\\r\\n\";\n    });\n\n    var encodedUri = encodeURI(\"data:text/csv;charset=utf-8,\" + csvContent);\n    var link = document.createElement(\"a\");\n    link.setAttribute(\"href\", encodedUri);\n    link.setAttribute(\"download\", \"comparison.csv\");\n    document.body.appendChild(link);\n    link.click();\n    document.body.removeChild(link);\n  }\n\n  return (\n    <>\n      <span style={{ fontSize: 24 }}>{\"比較結果\"}</span>\n      <button onClick={exportToCsv}>تصدير إلى Excel</button>\n      <HotTable\n        ref={props.hotTableComponentDiffResult}\n        data={[[\"\"]]}\n        style={{ width: \"100%\", padding: 15 }}\n        id={\"tableresult\"}\n        settings={hotDiffResultSettings}\n        renderer={renderDiff}\n        className=\"diffhandsontable\"\n        stretchH={\"all\"}\n      />\n    </>\n  );\n};\n\nexport default DiffResultHooks;\n","import React, { useState, useRef } from \"react\";\nimport { WorkBook } from \"xlsx/types\";\nimport { Row, Col, Select } from \"antd\";\n\nimport { ExcelHelper, ExcelDomain, SheetDomain } from \"./utils/ExcelHelper\";\nimport { diff } from \"./utils/Diff\";\nimport LeftHooks from \"./components/Left\";\nimport RightHooks from \"./components/Right\";\nimport CenterHooks from \"./components/Center\";\nimport DiffResultHooks from \"./components/DiffResult\";\n\nimport \"handsontable/dist/handsontable.full.css\";\nimport \"./App.scss\";\nimport \"normalize.css\";\n\nfunction App() {\n  var excelHelper = new ExcelHelper();\n  const [leftsheetname, setLeftSheetname] = useState(\"Sheet1\");\n  const [leftsheetlist, setLeftSheetlist] = useState<any[] | null>(null);\n  const [hotTableComponentLeft] = useState(React.createRef());\n  const [leftsheetdata, setLeftSheetData] = useState(\n    JSON.parse(JSON.stringify(ExcelHelper.BlankData(12, 8)))\n  );\n  const [leftWorkbook, setLeftWorkbook] = useState<WorkBook>();\n  const [rightsheetname, setRightSheetname] = useState(\"Sheet1\");\n  const [rightsheetlist, setRightSheetlist] = useState<any[] | null>(null);\n  const [hotTableComponentRight] = useState(React.createRef());\n  const [rightsheetdata, setRightSheetData] = useState(\n    JSON.parse(JSON.stringify(ExcelHelper.BlankData(12, 8)))\n  );\n  const [rightWorkbook, setRightWorkbook] = useState<WorkBook>();\n  const [diffBtnText] = useState(\">> Diff <<\");\n  const [hotTableComponentDiffResult] = useState(React.createRef());\n\n  const leftFileSelectRef = useRef<any>(null);\n  const rightFileSelectRef = useRef<any>(null);\n\n  const fileHandler = (\n    event: React.ChangeEvent<HTMLInputElement>,\n    field: string\n  ) => {\n    event.persist();\n    if (event.target.files) {\n      let fileObj = event.target.files[0];\n\n      if (fileObj) {\n        excelHelper.convertFileToExcel(\n          fileObj,\n          (err: any, resp: ExcelDomain) => {\n            if (err) {\n              console.log(err);\n            } else {\n              let sheetnames = [];\n              for (var i = 0; i < resp.sheets.length; i++) {\n                sheetnames.push(\n                  <Select.Option key={resp.sheets[i]} value={resp.sheets[i]}>\n                    {resp.sheets[i]}\n                  </Select.Option>\n                );\n              }\n              if (field === \"left\") {\n                setLeftSheetname(resp.sheets[0]);\n                setLeftSheetlist(sheetnames);\n                setLeftSheetData(resp.items);\n                setLeftWorkbook(resp.workbook);\n              } else {\n                setRightSheetname(resp.sheets[0]);\n                setRightSheetlist(sheetnames);\n                setRightSheetData(resp.items);\n                setRightWorkbook(resp.workbook);\n              }\n            }\n          }\n        );\n      }\n    }\n  };\n\n  const onSheetFieldChange = (selectedSheetName: string, field: string) => {\n    var wb = null;\n    if (field === \"left\") wb = leftWorkbook;\n    else wb = rightWorkbook;\n\n    if (wb !== undefined && wb !== null && selectedSheetName !== undefined) {\n      excelHelper.getSheet(\n        wb,\n        selectedSheetName,\n        (err: any, resp: SheetDomain) => {\n          if (err) {\n            console.log(err);\n          } else {\n            if (field === \"left\") {\n              setLeftSheetname(selectedSheetName);\n              setLeftSheetData(resp.items);\n            } else {\n              setRightSheetname(selectedSheetName);\n              setRightSheetData(resp.items);\n            }\n          }\n        }\n      );\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <Row>\n        <Col span={11}>\n          <LeftHooks\n            sheetname={leftsheetname}\n            sheetlist={leftsheetlist}\n            onFileSelectChange={(e) => fileHandler(e, \"left\")}\n            onSheetSelectChange={(e) => onSheetFieldChange(e, \"left\")}\n            hotTableComponentLeft={hotTableComponentLeft}\n            sheetdata={leftsheetdata}\n            fileRef={leftFileSelectRef}\n          />\n        </Col>\n        <Col span={2}>\n          <CenterHooks\n            btntext={diffBtnText}\n            onDiffBtnClick={(e) => {\n              diff(leftsheetdata, rightsheetdata, hotTableComponentDiffResult);\n            }}\n            onSampleBtnClick={(e) => {\n              setLeftSheetData(ExcelHelper.SampleDataLeft);\n              setRightSheetData(ExcelHelper.SampleDataRight);\n            }}\n            onResetBtnClick={(e) => {\n              // window.location.reload();\n              leftFileSelectRef.current.value = \"\";\n              rightFileSelectRef.current.value = \"\";\n              setLeftSheetlist(null);\n              setRightSheetlist(null);\n              setLeftSheetname(\"Sheet1\");\n              setRightSheetname(\"Sheet1\");\n              setLeftSheetData(\n                JSON.parse(JSON.stringify(ExcelHelper.BlankData(12, 8)))\n              );\n              setRightSheetData(\n                JSON.parse(JSON.stringify(ExcelHelper.BlankData(12, 8)))\n              );\n            }}\n          />\n        </Col>\n        <Col span={11}>\n          <RightHooks\n            sheetname={rightsheetname}\n            sheetlist={rightsheetlist}\n            onFileSelectChange={(e) => fileHandler(e, \"right\")}\n            onSheetSelectChange={(e) => onSheetFieldChange(e, \"right\")}\n            hotTableComponentRight={hotTableComponentRight}\n            sheetdata={rightsheetdata}\n            fileRef={rightFileSelectRef}\n          />\n        </Col>\n        <Col span={24} style={{ textAlign: \"center\" }}>\n          <DiffResultHooks\n            hotTableComponentDiffResult={hotTableComponentDiffResult}\n          />\n        </Col>\n      </Row>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}